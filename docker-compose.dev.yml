services:
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432" # optional, only if you need to access postgres from outside docker
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  directus:
    image: directus/directus:11.5.1
    container_name: directus
    ports:
      - 8055:8055
    volumes:
      - directus_uploads:/directus/uploads
    environment:
      KEY: "replace-with-random-value"
      SECRET: "replace-with-random-value"
      ADMIN_EMAIL: "admin@example.com"
      ADMIN_PASSWORD: "d1r3ctu5"

      DB_CLIENT: pg
      DB_HOST: postgres
      DB_PORT: "5432"
      DB_USER: $POSTGRES_USER
      DB_PASSWORD: $POSTGRES_PASSWORD
      DB_DATABASE: $POSTGRES_DB

      WEBSOCKETS_ENABLED: true
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8055/server/health || exit 1
      interval: 10s
      timeout: 10s
      retries: 10

  initialize-db:
    image: alpine:latest
    container_name: initDb
    volumes: 
      - ./scripts:/scripts
    environment:
      DIRECTUS_URL: "http://directus:8055"
      ADMIN_ACCESS_TOKEN: $DIRECTUS_TOKEN
    command: >
      /bin/sh -c '
        apk add curl jq bash
        until curl -s http://directus:8055/server/health | grep -q "ok"; do
          echo "Waiting for directus to be ready..."
          sleep 5
        done
        /bin/bash ./scripts/directus/build-tables.sh
      '

volumes:
  postgres_data:
  directus_uploads: